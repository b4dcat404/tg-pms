import telebot
import json
import requests
from db import DBHelper
from trello import TrelloHelper
from datetime import datetime, date


now = datetime.now()
time = now.strftime("%H:%M:%S") + '  ' + str(date.today())

db = DBHelper()
db.setup()
th = TrelloHelper()

all_keys = {}

# add your tg telegram API key from @BotFather
bot = telebot.TeleBot('HERE')
bot_credits = "\n\n\n*–ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞ [@trello_bdct_bot](https://t.me/trello_bdct_bot)*\n"
# –î–µ—Ñ–æ–ª—Ç–Ω—ã–π —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=["start", "help"])
def send_welcome(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è —Ä–∞–±–æ—Ç–∞—é –µ—â—ë –Ω–µ –≤ –ø–æ–ª–Ω—É—é —Å–∏–ª—É\n'
                                      '–ù–æ –º–µ–Ω—è –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å \n'
                                      '–Ø —É–∂–µ –º–æ–≥—É —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –¥–æ—Å–∫–µ Trello\n', parse_mode='MarkdownV2')
    bot.send_message(message.chat.id, '*–ö–æ–º–∞–Ω–¥—ã*\n\n'
                                      '/start & /help - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –∏ –∫–æ–º–∞–Ω–¥–∞—Ö\n'
                                      '/setup - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ —Å Trello\n'
                                      '/status - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Trello –∏ –≤—ã–≤–æ–¥ API –∫–ª—é—á–µ–π\n'
                                      '/reset - –°–±—Ä–æ—Å –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö', parse_mode='Markdown')
    bot.send_message(message.chat.id, '–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –±–æ—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å '
                                      '–∫–∞—Ä—Ç–æ—á–∫–∏ –≤ Trello\n\n'
                                      '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏', parse_mode='MarkdownV2')

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Trello
@bot.message_handler(commands=["setup"])
def addapimessage(message):
    if message.chat.id in db.get_items():
        bot.send_message(message.chat.id, '–¢—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª –ø–æ–¥–ª–∫—é—á–µ–Ω–∏–µ –∫ Trello')
    else:
        setup = bot.send_message(message.chat.id, '*–ù–∞—á–Ω—ë–º*\n'
                                              '\n'
                                              '–ü–æ–ª—É—á–∏ –∫–ª—é—á API –ø–æ [—Å—Å—ã–ª–∫–µ](https://trello.com/app-key)\n'
                                              '–ò –≤–≤–µ–¥–∏ –µ–≥–æ –Ω–∏–∂–µ\n'
                                              '*–í–ê–ñ–ù–û*: –í–≤–æ–¥–∏ –∫–ª—é—á –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ª–∏—à–Ω–∏—Ö —Å–∏–≤–æ–ª–æ–≤, '
                                              '–ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å _Ctrl\+C & Ctrl\+V_'
                                              '', parse_mode='MarkdownV2')
        bot.register_next_step_handler(setup, addapi)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ API –≤ —Å–ª–æ–≤–∞—Ä—å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ TG ID
def addapi(message):
    if message.chat.id not in all_keys:
        all_keys[message.chat.id] = {}
    all_keys[message.chat.id]["api_key"] = message.text
    setup_api = bot.send_message(message.chat.id, '–¢–≤–æ–π API –∫–ª—é—á: ' + '||' + all_keys[message.chat.id]["api_key"] + '||'
                                                   + '\n\n–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Ç–æ–∫–µ–Ω\n'
                                            '–ü–æ–ª—É—á–∏—Ç –¢–æ–∫–µ–Ω –ø–æ [—Å—Å—ã–ª–∫–µ](https://trello.com/1/authorize?'
                                                     'expiration=never&scope=read,write,account&response_type=token'
                                                     '&name=Server%20Token&key='
                                            '' + all_keys[message.chat.id]["api_key"] + ')', parse_mode='MarkdownV2')
    bot.register_next_step_handler(setup_api, addtokenmessage)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¢–æ–∫–µ–Ω–∞ –≤ —Å–ª–æ–≤–∞—Ä—å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ TG ID
def addtokenmessage(message):
    all_keys[message.chat.id]["token"] = message.text
    setup_token = bot.send_message(message.chat.id, '–¢–≤–æ–π Token: ' + '||' + all_keys[message.chat.id]["token"] + '||'
                                                    + "\n\n–¢–µ–ø–µ—Ä—å –ø–æ–¥–∫–ª—é—á–∏–º –°–ø–∏—Å–æ–∫\n"
                                                     "–¢—É—Ç –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Å–ª–æ–∂–Ω–µ–µ\.\n"
                                                     "–û—Ç–∫—Ä–æ–π Trello –Ω–∞ –ü–ö –∏–ª–∏ –≤ –º–æ–±–∏–ª–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ \(—Ç–∞–º —É–¥–æ–±–Ω–µ–µ\)\n"
                                                     "–í—ã–±–µ—Ä–∏ –¥–æ—Å–∫—É –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω—É–∂–Ω—ã —Å–ø–∏—Å–æ–∫\n"
                                                     "–î–æ–±–∞–≤—å –≤ –∫–æ–Ω—Ü–µ URl *\.json*\n"
                                                     "\n"
                                                     "–¢–µ–ø–µ—Ä—å –≤ –ø–æ–∏—Å–∫–µ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞\n"
                                                     "–†—è–¥–æ–º –≤–æ–∑–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è –±—É–¥–µ—Ç –Ω—É–∂–Ω—ã ID\n"
                                                     "–í–≤–µ–¥–∏ –µ–≥–æ –Ω–∏–∂–µ\n\n"
                                                     "*–í–ê–ñ–ù–û:* –≠—Ç–æ—Ç –ø—É–Ω–∫—Ç –≤ –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω \(–≤—Ä–µ–º–µ–Ω–Ω–∞—è "
                                                     "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å\)", parse_mode='MarkdownV2')
    bot.register_next_step_handler(setup_token, setup_list)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ IdList –≤ —Å–ª–æ–≤–∞—Ä—å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ TG ID
def setup_list(message):
    all_keys[message.chat.id]["list"] = message.text
    chat_id = message.chat.id
    db.trello_connect(chatid=chat_id, apikey=all_keys[message.chat.id]["api_key"], token=all_keys[message.chat.id]["token"], board=all_keys[message.chat.id]["list"])
    bot.send_message(message.chat.id, '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n'
                                      '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–ª—é—á–∏ - /status\n'
                                      '–ï—Å–ª–∏ —Ç—ã –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É, –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É—è /reset\n\n'
                                      '*–í–ê–ñ–ù–û*: –í—Å–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É, –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥, –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ Trello')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –≤—ã–≤–æ–¥ /status
@bot.message_handler(commands=["status"])
def status(message):
    tg_id = message.chat.id
    query_api = db.get_api(tg_id)
    if message.chat.id not in db.get_items():
        bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏ Trello - /setup')
    else:
        bot.send_message(message.chat.id, '–¢–≤–æ–∏ –∫–ª—é—á–∏:\n'
                                      'API: ' + '||' + query_api[0]["api_key"] + '||' + '\n'
                                      '–¢–æ–∫–µ–Ω: ' + '||' + query_api[0]["token"] + '||' + '\n'
                                      '–°–ø–∏—Å–æ–∫: ' + '||' + query_api[0]["board"] + '||'
                                       '', parse_mode='MarkdownV2')

# –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ç—Ä–µ–ª–ª–æ
@bot.message_handler(commands=["reset"])
def reset(message):
    tg_id = message.chat.id
    if message.chat.id in db.get_items():
        db.delete_item(tg_id)
        bot.send_message(message.chat.id, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã\n'
                                      '–ü–æ–¥–∫–ª—é—á–∏ Trello - /setup')
    else:
        bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏ Trello - /setup')


@bot.message_handler(func=lambda message: True)
def handle_text(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–∏–µ caht_id –≤ –ë–î
    if message.chat.id not in db.get_items():
        bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏ Trello - /setup')
    else:
        tg_id = message.chat.id
        query_api = db.get_api(tg_id)
        name = "%.25s"%message.text
        message_text = message.text
        desc_urls = []
        desc_urls_str = ""
        desc_url = message.entities
        if message.forward_from_chat != None:
            forward = "*–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –æ—Ç [@" + message.forward_from_chat.username + "](https://t.me/" + message.forward_from_chat.username + ")*\n"
        elif message.forward_from != None:
            forward = "*–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –æ—Ç [@" + message.forward_from.username + "](https://t.me/" + message.forward_from.username + ")*\n"
        else:
            forward = ''

        # forward = message_from + message_from_chat
        # –ü—Ä–æ–≥–æ–Ω—è–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª, –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
        if desc_url != None:
            for item in desc_url:
                desc_urls.append(item.url)
            for i in desc_urls:
                desc_urls_str += str(i) + "\n"
        else:
            desc_urls_str = '\n–°—Å—ã–ª–æ–∫ –Ω–µ—Ç'
        print(message)
        # print()
        print(forward)
        desc = forward + "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n----------------\n\n" + message_text + "\n\n**URLs:** \n" + desc_urls_str + ' ' + '\nüìÜ*–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:* ' + time + bot_credits
        source_url = ""
        query = {
            'name': name,
            'desc': desc,
            'urlSource' : source_url,
            'idList': query_api[0]["board"],
            'key': query_api[0]["api_key"],
            'token': query_api[0]["token"],
    }
        response = requests.request(
        "POST",
        th.url,
        params=query
        )
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å, —á—Ç–æ –±—ã –Ω–µ –ª–æ–º–∞–ª–∏ –±–æ—Ç–∞ –∫—Ä–∏–≤—ã–º–∏ API –∫–ª—é—á–∞–º–∏
        # –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–µ–Ω–Ω—É—é –≤ –æ—Ç–≤–µ—Ç–µ (ShortURL) –≤ —Å–ª–æ–≤–æ "–ö–∞—Ä—Ç–æ—á–∫–∞"
        url = json.loads(response.text)
        if response.status_code == 200:
            bot.send_message(message.chat.id,   '‚úÖ*–ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞*‚úÖ\n' +
                                                'üìå*–ù–∞–∑–≤–∞–Ω–∏–µ:* ' + name +
                                                '\nüåê*–°—Å—ã–ª–∫–∞:* ' + url["shortUrl"] +
                                                '\nüìÜ*–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:* ' + time, parse_mode='Markdown')
        else:
            bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ\n'
                                              '–ò—Å–ø–æ–ª—å–∑—É–π /reset, —á—Ç–æ –±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–ª–∫–ª—é—á–µ–Ω–∏–µ –∫ Trello –∑–∞–Ω–æ–≤–æ')


bot.polling(none_stop=True, interval=0)
